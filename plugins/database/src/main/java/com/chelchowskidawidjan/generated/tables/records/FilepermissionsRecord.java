/*
 * This file is generated by jOOQ.
 */
package com.chelchowskidawidjan.generated.tables.records;


import com.chelchowskidawidjan.generated.enums.Permissions;
import com.chelchowskidawidjan.generated.tables.Filepermissions;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class FilepermissionsRecord extends TableRecordImpl<FilepermissionsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.filepermissions.user</code>.
     */
    public void setUser(String[] value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.filepermissions.user</code>.
     */
    public String[] getUser() {
        return (String[]) get(0);
    }

    /**
     * Setter for <code>public.filepermissions.file</code>.
     */
    public void setFile(String[] value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.filepermissions.file</code>.
     */
    public String[] getFile() {
        return (String[]) get(1);
    }

    /**
     * Setter for <code>public.filepermissions.permission</code>.
     */
    public void setPermission(Permissions value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.filepermissions.permission</code>.
     */
    public Permissions getPermission() {
        return (Permissions) get(2);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FilepermissionsRecord
     */
    public FilepermissionsRecord() {
        super(Filepermissions.FILEPERMISSIONS);
    }

    /**
     * Create a detached, initialised FilepermissionsRecord
     */
    public FilepermissionsRecord(String[] user, String[] file, Permissions permission) {
        super(Filepermissions.FILEPERMISSIONS);

        setUser(user);
        setFile(file);
        setPermission(permission);
        resetTouchedOnNotNull();
    }
}
